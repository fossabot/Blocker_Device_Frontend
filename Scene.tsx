/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/key_card/scene.gltf -t 
Author: NinJOke (https://sketchfab.com/NinJOke)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/key-card-559d847c11e74dcca5e569b2bbba33e6
Title: Key Card
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Plane_Metal_0: THREE.Mesh
    Plane_Hologram_0: THREE.Mesh
    Plane_Button_0: THREE.Mesh
    Plane_Light_0: THREE.Mesh
  }
  materials: {
    Metal: THREE.MeshStandardMaterial
    Hologram: THREE.MeshStandardMaterial
    Button: THREE.MeshStandardMaterial
    Light: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 0, 0.349]} rotation={[-Math.PI / 2, 0, -Math.PI]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, Math.PI / 2, 0]} scale={[100, 100, 29.564]}>
            <mesh geometry={nodes.Plane_Metal_0.geometry} material={materials.Metal} />
            <mesh geometry={nodes.Plane_Hologram_0.geometry} material={materials.Hologram} />
            <mesh geometry={nodes.Plane_Button_0.geometry} material={materials.Button} />
            <mesh geometry={nodes.Plane_Light_0.geometry} material={materials.Light} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
