/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/key_card/scene.gltf -t 
Author: NinJOke (https://sketchfab.com/NinJOke)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/key-card-559d847c11e74dcca5e569b2bbba33e6
Title: Key Card
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, Html } from '@react-three/drei'

// 타입 정의 (GoldKey 참고)
type GLTFResult = {
  nodes: {
    Plane_Metal_0: THREE.Mesh;
    Plane_Hologram_0: THREE.Mesh;
    Plane_Button_0: THREE.Mesh;
    Plane_Light_0: THREE.Mesh;
  };
  materials: {
    Metal: THREE.MeshStandardMaterial;
    Hologram: THREE.MeshStandardMaterial;
    Button: THREE.MeshStandardMaterial;
    Light: THREE.MeshStandardMaterial;
  };
};

interface KeyCardProps {
  scale?: number | [number, number, number];
  position?: [number, number, number];
  rotation?: [number, number, number];
}

export default function KeyCard({
  scale = 1.5,
  position = [0, 1.5, 0],
  rotation = [0, 0, 0]
}: KeyCardProps) {
  const { nodes, materials } = useGLTF('/key_card/scene.gltf') as unknown as GLTFResult;
  const groupRef = useRef<THREE.Group>(null);

  // fallback 처리
  if (!nodes || !materials || !nodes.Plane_Metal_0) {
    return <group position={position}><Html center style={{color: 'red'}}>KeyCard 모델 로드 실패</Html></group>;
  }

  // 재질 커스터마이즈(필요시)
  if (materials.Metal) {
    materials.Metal.metalness = 1.0;
    materials.Metal.roughness = 0.1;
    materials.Metal.needsUpdate = true;
  }
  if (materials.Hologram) {
    materials.Hologram.emissive = new THREE.Color(0x00FFFF);
    materials.Hologram.emissiveIntensity = 0.7;
    materials.Hologram.needsUpdate = true;
  }

  return (
    <group
      ref={groupRef}
      scale={typeof scale === 'number' ? [scale, scale, scale] : scale}
      position={position}
      rotation={rotation}
      dispose={null}
    >
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Plane_Metal_0.geometry} material={materials.Metal} />
        <mesh geometry={nodes.Plane_Hologram_0.geometry} material={materials.Hologram} />
        <mesh geometry={nodes.Plane_Button_0.geometry} material={materials.Button} />
        <mesh geometry={nodes.Plane_Light_0.geometry} material={materials.Light} />
      </group>
    </group>
  );
}

useGLTF.preload('/key_card/scene.gltf')
